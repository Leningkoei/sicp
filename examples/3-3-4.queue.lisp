(in-package :common-lisp-user)
(defpackage :queue
  (:use :common-lisp))
(in-package :queue)

(defun make-queue ()
  (cons nil nil))
(defun front-ptr (this)
  (car this))
(defun rear-ptr (this)
  (cdr this))
(defun set-front-ptr! (this item)
  (rplaca this item))
(defun set-rear-ptr! (this item)
  (rplacd this item))
(defun queue-empty? (this)
  (null (front-ptr this)))
(defun queue-front (this)
  (if (queue-empty? this)
      (error (format nil "FRONT called with an queue-empty? queue ~A" this))
      (car (front-ptr this))))
(defun queue-insert! (this item)
  (let ((new-pair (cons item nil)))
    (if (queue-empty? this)
        (progn (set-front-ptr! this new-pair)
               (set-rear-ptr! this new-pair)
               this)
        (progn (rplacd (rear-ptr this) new-pair)
               (set-rear-ptr! this new-pair)
               this))))
(defun queue-delete! (this)
  (if (queue-empty? this)
      (error (format nil "QUEUE-DELETE! called with an queue-empty? queue ~A"
                     this))
      (progn (set-front-ptr! this (cdr (front-ptr this)))
             this)))

(export 'make-queue)
(export 'queue-empty?)
(export 'queue-front)
(export 'queue-insert!)
(export 'queue-delete!)
